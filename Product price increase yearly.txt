DECLARE
    v_year NUMBER;
    v_percent_increase NUMBER;
    v_max_product_key NUMBER;
BEGIN
    -- Fetch the maximum ProductKey from product_dim if it exists, otherwise start from 1
    SELECT COALESCE(MAX(ProductKey), 0) INTO v_max_product_key FROM product_dim;

    FOR rec IN (SELECT * FROM Products)
    LOOP
        v_year := 2015;
        WHILE v_year <= 2024 LOOP
            -- Calculate the percent increase
            v_percent_increase := DBMS_RANDOM.VALUE(1, 6); -- Randomly select a value between 1 and 5

            -- Before inserting the new record, update existing records for this product and year range
            UPDATE product_dim
            SET IsCurrent = 'N'
            WHERE ProductID = rec.ProductID
              AND EffectiveStartDate <= TO_DATE(v_year-1 || '-12-31', 'YYYY-MM-DD')
              AND EffectiveEndDate >= TO_DATE(v_year-1 || '-01-01', 'YYYY-MM-DD')
              AND IsCurrent = 'Y';

            -- Insert the new record
            INSERT INTO product_dim (
                ProductKey,
                ProductID,
                ProductName,
                SupplierID,
                CategoryID,
                QuantityPerUnit,
                UnitPrice,
                UnitsInStock,
                UnitsOnOrder,
                ReorderLevel,
                Discontinued,
                EffectiveStartDate,
                EffectiveEndDate,
                IsCurrent
            )
            VALUES (
                v_max_product_key + 1,
                rec.ProductID,
                rec.ProductName,
                rec.SupplierID,
                rec.CategoryID,
                rec.QuantityPerUnit,
                rec.UnitPrice * (1 + (v_percent_increase / 100)), -- Adjusted UnitPrice
                rec.UnitsInStock,
                rec.UnitsOnOrder,
                rec.ReorderLevel,
                rec.Discontinued,
                TO_DATE(v_year || '-01-01', 'YYYY-MM-DD'), -- Correct date format
                TO_DATE(v_year || '-12-31', 'YYYY-MM-DD'), -- End date placeholder
                'Y'
            );

            v_max_product_key := v_max_product_key + 1; -- Update the max key after insertion
            v_year := v_year + 1; -- Increment the year for the next iteration
        END LOOP;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('Unit prices updated and IsCurrent set successfully.');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/
