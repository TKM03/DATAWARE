SET linesize 100
SET pagesize 120
ALTER SESSION SET NLS_DATE_FORMAT = 'dd-MON-YYYY';

-- Reading user input for year
-- Options of year
SELECT DISTINCT EXTRACT(YEAR FROM CalenderDate) AS Year
FROM Date_dim
ORDER BY Year;
ACCEPT Input_Year NUMBER PROMPT 'Enter the year (2015-2024): ' 

-- Setting up formatting options
COLUMN EmployeeKey     FORMAT 9999               HEADING "Employee ID"
COLUMN EmployeeName    FORMAT A10                HEADING "Employee Name"
COLUMN TotalSales      FORMAT $999,999,990.99    HEADING "Total Sales ($)"
COLUMN TotalOrders     FORMAT 999,999            HEADING "Total Orders"
COLUMN AvgOrderValue   FORMAT $999,999,990.99    HEADING "Average Order Value"
COLUMN Year            FORMAT 9999               HEADING "Year"
COLUMN Rank            FORMAT 99               HEADING "Rank"

TTITLE -
CENTER 'The Sales and Orders' -
SKIP 1 -
CENTER 'For Employee from 2015 to 2024' -
RIGHT 'Date: ' _DATE -
SKIP 1 RIGHT 'Page ' -
FORMAT 999 SQL.PNO -
SKIP 2

-- Retrieving and presenting employee performance data for the specified year
CREATE OR REPLACE VIEW EmployeeSales AS 
SELECT
    e.EmployeeKey AS "Employee ID",
    e.FirstName ||' '|| e.LastName AS "Employee Name",
    SUM(o.TotalPrice) AS "Total Sales",
    COUNT(*) AS "Total Orders",
    ROUND(SUM(o.TotalPrice) / COUNT(*), 2) AS "Average Order Value",
    EXTRACT(YEAR FROM d.CalenderDate) AS "Year",
    RANK() OVER (ORDER BY SUM(o.TotalPrice) DESC) AS "Rank"
FROM
    order_FACTS o
JOIN
    Employee_dim e ON o.EmployeeKey = e.EmployeeKey
JOIN
    Date_dim d ON o.DateKey = d.DateKey
WHERE
    EXTRACT(YEAR FROM d.CalenderDate) = &Input_Year
    AND e.EmployeeKey BETWEEN 1 AND 9  -- Filter Employee Key from 1 to 9
GROUP BY
    e.EmployeeKey, e.FirstName, e.LastName, EXTRACT(YEAR FROM d.CalenderDate)
ORDER BY
    e.EmployeeKey;

-- Displaying the result
Select * From EmployeeSales;

-- Clearing the formatting options
CLEAR COLUMNS
CLEAR BREAKS
CLEAR COMPUTES
TTITLEÂ OFF